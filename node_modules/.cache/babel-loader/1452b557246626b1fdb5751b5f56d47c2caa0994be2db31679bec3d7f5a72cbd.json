{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nezex\\\\Desktop\\\\currency\\\\src\\\\components\\\\InputCurrency.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputCurrency = props => {\n  _s();\n  const [prevCurrency, setPrevCurrency] = useState('');\n  const handleCurrChange = currency => {\n    setPrevCurrency(currency);\n    props.currencyChange(currency);\n  };\n  useEffect(() => {\n    // Если выбранная валюта (props.currency) не равна предыдущей (prevCurrency),\n    // то обновляем значения других валют с помощью переданной функции currencyChange\n    if (prevCurrency !== props.currency) {\n      props.currencyChange(props.currency);\n    }\n  }, [props.currency, prevCurrency, props.currencyChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: props.currency,\n      onChange: e => props.currencyChange(e.target.value),\n      children: props.currencies.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: currency,\n        children: currency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onFocus: e => e.target.value = 1,\n      value: props.quantity,\n      onChange: e => props.quantityChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(InputCurrency, \"W4LXsRR8YDIF+zrlkje9VxnH+Bg=\");\n_c = InputCurrency;\nInputCurrency.propTypes = {\n  currencyQuantity: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencies: PropTypes.array,\n  currencyChange: PropTypes.func,\n  quantityChange: PropTypes.func\n};\nexport default InputCurrency;\nvar _c;\n$RefreshReg$(_c, \"InputCurrency\");","map":{"version":3,"names":["React","useEffect","PropTypes","jsxDEV","_jsxDEV","InputCurrency","props","_s","prevCurrency","setPrevCurrency","useState","handleCurrChange","currency","currencyChange","className","children","value","onChange","e","target","currencies","map","fileName","_jsxFileName","lineNumber","columnNumber","type","onFocus","quantity","quantityChange","_c","propTypes","currencyQuantity","number","isRequired","string","array","func","$RefreshReg$"],"sources":["C:/Users/nezex/Desktop/currency/src/components/InputCurrency.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst InputCurrency = (props) => {\r\n  const [prevCurrency, setPrevCurrency] = useState('');\r\n\r\nconst handleCurrChange = (currency) => {\r\n  setPrevCurrency(currency);\r\n  props.currencyChange(currency);\r\n}\r\n  useEffect(() => {\r\n    // Если выбранная валюта (props.currency) не равна предыдущей (prevCurrency),\r\n    // то обновляем значения других валют с помощью переданной функции currencyChange\r\n    if (prevCurrency !== props.currency) {\r\n      props.currencyChange(props.currency);\r\n    }\r\n  }, [props.currency, prevCurrency, props.currencyChange]);\r\n  return (\r\n    <div className=\"customInput\">\r\n      <select value={props.currency} onChange={e=>props.currencyChange(e.target.value)}>\r\n        {props.currencies.map((currency => (\r\n          <option value={currency}>\r\n            {currency}\r\n          </option>\r\n        )))}\r\n      </select>\r\n      <input type=\"number\" onFocus={e => e.target.value = 1} value={props.quantity} onChange={e=>props.quantityChange(e.target.value)} />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nInputCurrency.propTypes={\r\ncurrencyQuantity: PropTypes.number.isRequired,\r\ncurrency: PropTypes.string.isRequired,\r\ncurrencies: PropTypes.array,\r\ncurrencyChange:PropTypes.func,\r\nquantityChange:PropTypes.func\r\n}\r\n\r\nexport default InputCurrency;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IACrCH,eAAe,CAACG,QAAQ,CAAC;IACzBN,KAAK,CAACO,cAAc,CAACD,QAAQ,CAAC;EAChC,CAAC;EACCX,SAAS,CAAC,MAAM;IACd;IACA;IACA,IAAIO,YAAY,KAAKF,KAAK,CAACM,QAAQ,EAAE;MACnCN,KAAK,CAACO,cAAc,CAACP,KAAK,CAACM,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACN,KAAK,CAACM,QAAQ,EAAEJ,YAAY,EAAEF,KAAK,CAACO,cAAc,CAAC,CAAC;EACxD,oBACET,OAAA;IAAKU,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BX,OAAA;MAAQY,KAAK,EAAEV,KAAK,CAACM,QAAS;MAACK,QAAQ,EAAEC,CAAC,IAAEZ,KAAK,CAACO,cAAc,CAACK,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAD,QAAA,EAC9ET,KAAK,CAACc,UAAU,CAACC,GAAG,CAAET,QAAQ,iBAC7BR,OAAA;QAAQY,KAAK,EAAEJ,QAAS;QAAAG,QAAA,EACrBH;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEZ;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACTrB,OAAA;MAAOsB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAET,CAAC,IAAIA,CAAC,CAACC,MAAM,CAACH,KAAK,GAAG,CAAE;MAACA,KAAK,EAAEV,KAAK,CAACsB,QAAS;MAACX,QAAQ,EAAEC,CAAC,IAAEZ,KAAK,CAACuB,cAAc,CAACX,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAE/H;AAEV,CAAC;AAAClB,EAAA,CA3BIF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AA6BnBA,aAAa,CAAC0B,SAAS,GAAC;EACxBC,gBAAgB,EAAE9B,SAAS,CAAC+B,MAAM,CAACC,UAAU;EAC7CtB,QAAQ,EAAEV,SAAS,CAACiC,MAAM,CAACD,UAAU;EACrCd,UAAU,EAAElB,SAAS,CAACkC,KAAK;EAC3BvB,cAAc,EAACX,SAAS,CAACmC,IAAI;EAC7BR,cAAc,EAAC3B,SAAS,CAACmC;AACzB,CAAC;AAED,eAAehC,aAAa;AAAC,IAAAyB,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}